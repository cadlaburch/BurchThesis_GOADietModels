ATFprop$ATFprop = ATFprop$ATF_30_69 / ATFprop$ATF_All
# Join bottom trawl survey and proportional length data:
require(dplyr)
Lengthprop = merge(ATFprop, PHprop, by = "Haul_Join", all = TRUE)
trawl_wide_30_69 = trawl_wide %>% left_join(Lengthprop)
# Remove unnecessary columns:
trawl_wide_30_69 = trawl_wide_30_69[,c(1:16,18:20,22:24)]
# Replace NAs with zeros:
trawl_wide_30_69[,17:22][is.na(trawl_wide_30_69[,17:22])] = 0
# Calculate adjusted CPUE (number per ha) based on proportional catch of 30 to 69 cm size class:
trawl_wide_30_69$adjCPUE_ATF = trawl_wide_30_69$ATF * trawl_wide_30_69$ATFprop
trawl_wide_30_69$adjCPUE_PH = trawl_wide_30_69$PH * trawl_wide_30_69$PHprop
################################################################
### MODEL FITTING AND PLOTTING ###
################################################################
require(mgcv)
require(lme4)
require(MuMIn)
options(na.action = "na.fail")
require(sp)
require(maps)
require(mapdata)
require(visreg)
require(ggplot2)
require(PBSmapping)
# Ensure that the same tows are included in each model by removing those with incomplete environmental data (i.e., rows with missing depths or bottom temperatures):
trawl_comp = subset(trawl_wide_30_69, !is.na(GEAR_DEPTH))
trawl_comp = subset(trawl_comp, !is.na(GEAR_TEMPERATURE))
################################################################
### Model presence-absence (P/A) for Pacific Halibut ###
# Label each haul as being present or absent for P. Halibut:
trawl_comp$PHpa = as.numeric(trawl_comp$adjCPUE_PH > 0)
# Remove the extreme outlying station in considerably deep water:
trawl_compSub = subset(trawl_comp, Haul_Join!="148201101201")
View(trawl_compSub)
#remove any NAs
Model1 <- na.omit(Model1)
#Model 1 will look at euphausiids in walleye pollock stomachs
Model1 <- wide_data %>%
filter(Pred_common == "Walleye pollock") %>%
select(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, Len_bin, Pred_common, Euphausiacea)
#remove any NAs
Model1 <- na.omit(Model1)
test <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4),
data = Model1,
family = binomial(link = logit),
method="GCV.Cp")
test_select <- dredge(test, beta = F, evaluate = T, rank = "AIC", trace = F)
require(mgcv)
require(lme4)
require(MuMIn)
options(na.action = "na.fail")
require(sp)
require(maps)
require(mapdata)
require(visreg)
require(ggplot2)
require(PBSmapping)
# Ensure that the same tows are included in each model by removing those with incomplete environmental data (i.e., rows with missing depths or bottom temperatures):
trawl_comp = subset(trawl_wide_30_69, !is.na(GEAR_DEPTH))
trawl_comp = subset(trawl_comp, !is.na(GEAR_TEMPERATURE))
# Label each haul as being present or absent for P. Halibut:
trawl_comp$PHpa = as.numeric(trawl_comp$adjCPUE_PH > 0)
# Remove the extreme outlying station in considerably deep water:
trawl_compSub = subset(trawl_comp, Haul_Join!="148201101201")
# Run the full (global) model:
PH.pa.gam_full = gam(PHpa ~ YEAR + s(START_LONGITUDE, START_LATITUDE) + s(GEAR_DEPTH) + s(GEAR_TEMPERATURE, k=4), data = trawl_compSub, family = binomial(link=logit), method="GCV.Cp")
summary(PH.pa.gam_full)
# Generate all possible alternative models and select the best-fit based on delta AIC:
PH.pa.gam_select = dredge(PH.pa.gam_full, beta=FALSE, evaluate=TRUE, rank="AIC", trace=FALSE)
summary(test)
test <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4) + Len_bin,
data = Model1,
family = binomial(link = logit),
method="GCV.Cp")
summary(test)
library(here) #for finding working directory
library(readr) #for loading CSV
library(tidyverse)
#Load food habits data
raw_stomach_contents2021 <- read_csv(here("data/GOA_Raw_StomachContents2021.csv"))
data <- raw_stomach_contents2021
#create unique haul identifier
#?????????? I'm not sure why she created another haul identifier when there was already a HaulJoin Column?
data$Haul_Join <- paste(data$VESSEL, data$CRUISE, data$HAUL, sep = "")
#Next she manually assigned INPFC areas to strata areas, but I don't think I have to do this because there already is a INPFC column in my data
strata <- data %>% distinct(STRATUM, INPFC_AREA)
#Exclude data before 1990
data <- data %>%
filter(Year >= 1990)
#Select only predators of interest
data <- data %>%
filter(Pred_common %in% c("Walleye pollock", "Pacific cod", "Pacific halibut", "Arrowtooth flounder"))
#set 10cm fork length bins
data <- data %>%
mutate(Len_bin = cut(PRED_LEN, breaks = c(0, 29, 39, 49, 59, 69, 1000)))
levels(data$Len_bin) = c("<30", "30-39", "40-49", "50-59", "60-69", ">70")
#remove empty stomachs
data <- data %>%
filter(Prey_Name != "Empty")
#I think I need to do a bit of data manipulation to get my data to look more like cheryls which is in a wide format
#I believe that her data is formatted so each line is a predator and the prey items are listed as columns within the pred stomach
#I need to create a unique identifier for each predator
wide_data <- data %>%
mutate(uniqueID = paste(HAULJOIN, PRED_NODC, PRED_SPECN), sep = "",
pres_absent = ifelse(PREY_TWT > 0, 1, 0)) %>%
distinct(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, Len_bin, Pred_common, Prey_Name, pres_absent) %>% #This big chunk is to get rid of redundancies
pivot_wider(names_from = Prey_Name, values_from = pres_absent, values_fill = list(pres_absent = 0))
#check that the each stomach is it's own unique line
length(unique(wide_data$uniqueID))
install.packages("MuMIn")
library(MuMIn) #for the dredge summary table
wide_data <- na.omit(wide_data)
View(wide_data)
?na.omit
#I think I need to do a bit of data manipulation to get my data to look more like cheryls which is in a wide format
#I believe that her data is formatted so each line is a predator and the prey items are listed as columns within the pred stomach
#I need to create a unique identifier for each predator
wide_data <- data %>%
mutate(uniqueID = paste(HAULJOIN, PRED_NODC, PRED_SPECN), sep = "",
pres_absent = ifelse(PREY_TWT > 0, 1, 0)) %>%
distinct(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, Len_bin, Pred_common, Prey_Name, pres_absent) %>% #This big chunk is to get rid of redundancies
pivot_wider(names_from = Prey_Name, values_from = pres_absent, values_fill = list(pres_absent = 0))
test <- na.omit(wide_data)
View(test)
library(MuMIn) #for the dredge summary table
#Load food habits data
raw_stomach_contents2021 <- read_csv(here("data/GOA_Raw_StomachContents2021.csv"))
data <- raw_stomach_contents2021
#create unique haul identifier
#?????????? I'm not sure why she created another haul identifier when there was already a HaulJoin Column?
data$Haul_Join <- paste(data$VESSEL, data$CRUISE, data$HAUL, sep = "")
#Exclude data before 1990
data <- data %>%
filter(Year >= 1990)
#Select only predators of interest
data <- data %>%
filter(Pred_common %in% c("Walleye pollock", "Pacific cod", "Pacific halibut", "Arrowtooth flounder"))
#remove empty stomachs
data <- data %>%
filter(Prey_Name != "Empty")
#I think I need to do a bit of data manipulation to get my data to look more like cheryls which is in a wide format
#I believe that her data is formatted so each line is a predator and the prey items are listed as columns within the pred stomach
#I need to create a unique identifier for each predator
wide_data <- data %>%
mutate(uniqueID = paste(HAULJOIN, PRED_NODC, PRED_SPECN), sep = "", #create unique pred id
pres_absent = ifelse(PREY_TWT > 0, 1, 0)) %>%
distinct(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, Len_bin, Pred_common, Prey_Name, pres_absent) %>% #This big chunk is to get rid of redundancies
pivot_wider(names_from = Prey_Name, values_from = pres_absent, values_fill = list(pres_absent = 0))
#I think I need to do a bit of data manipulation to get my data to look more like cheryls which is in a wide format
#I believe that her data is formatted so each line is a predator and the prey items are listed as columns within the pred stomach
#I need to create a unique identifier for each predator
wide_data <- data %>%
mutate(uniqueID = paste(HAULJOIN, PRED_NODC, PRED_SPECN), sep = "", #create unique pred id
pres_absent = ifelse(PREY_TWT > 0, 1, 0)) %>%
distinct(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, PRED_LEN, Pred_common, Prey_Name, pres_absent) %>% #This big chunk is to get rid of redundancies
pivot_wider(names_from = Prey_Name, values_from = pres_absent, values_fill = list(pres_absent = 0))
#check that the each stomach is it's own unique line
length(unique(wide_data$uniqueID))
Euph_WP <- wide_data %>%
filter(Pred_common == "Walleye pollock")
View(Euph_WP)
test <- wide_data %>%
na.omit()
Euph_WP <- wide_data %>%
filter(Pred_common == "Walleye pollock")
function (x, dat) {
Model1 <- gam(x ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = dat,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
Model_fun <- function (x, dat) {
Model1 <- gam(x ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = dat,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
Euph_WP_M <- Model_fun(Euphausiacea, Euph_WP)
library(here) #for finding working directory
library(readr) #for loading CSV
library(tidyverse)
library(MuMIn) #for the dredge summary table
################################################################
### MODEL FITTING AND PLOTTING ###
################################################################
require(mgcv)
require(lme4)
require(MuMIn)
options(na.action = "na.fail")
require(sp)
require(maps)
require(mapdata)
require(visreg)
require(ggplot2)
require(PBSmapping)
?gam
Model_fun <- function (x, dat) {
Model1 <- gam(x ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = dat,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
Euph_WP_M <- Model_fun(Euphausiacea, Euph_WP)
Euph_WP_M <- Model_fun(Euphausiacea, Euph_WP)
Euph_WP_M <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4) + PRED_LEN,
data = Euph_WP,
family = binomial(link = logit),
method = "GCV.Cp")
#I think I need to do a bit of data manipulation to get my data to look more like cheryls which is in a wide format
#I believe that her data is formatted so each line is a predator and the prey items are listed as columns within the pred stomach
#I need to create a unique identifier for each predator
wide_data <- data %>%
mutate(uniqueID = paste(HAULJOIN, PRED_NODC, PRED_SPECN), sep = "", #create unique pred id
pres_absent = ifelse(PREY_TWT > 0, 1, 0)) %>%
distinct(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, PRED_LEN, Pred_common, Prey_Name, pres_absent) %>% #This big chunk is to get rid of redundancies
pivot_wider(names_from = Prey_Name, values_from = pres_absent, values_fill = list(pres_absent = 0)) %>%
na.omit() #may want to remove this line. It removes any rows that contain NAs
Euph_WP_M <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4) + PRED_LEN,
data = Euph_WP,
family = binomial(link = logit),
method = "GCV.Cp")
Euph_WP_M <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4),
data = Euph_WP,
family = binomial(link = logit),
method = "GCV.Cp")
options(na.action = "na.fail")
require(MuMIn)
install.packages("MuMIn")
Euph_WP_M <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4) + PRED_LEN,
data = Euph_WP,
family = binomial(link = logit),
method = "GCV.Cp")
Euph_WP <- na.omit(Euph_WP)
Euph_WP_M <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4) + PRED_LEN,
data = Euph_WP,
family = binomial(link = logit),
method = "GCV.Cp")
Euph_WP_M <- Model_fun(Euphausiacea, Euph_WP)
Euph_WP_M <- Model_fun('Euphausiacea', Euph_WP)
#I think I need to do a bit of data manipulation to get my data to look more like cheryls which is in a wide format
#I believe that her data is formatted so each line is a predator and the prey items are listed as columns within the pred stomach
#I need to create a unique identifier for each predator
wide_data <- data %>%
mutate(uniqueID = paste(HAULJOIN, PRED_NODC, PRED_SPECN), sep = "", #create unique pred id
pres_absent = ifelse(PREY_TWT > 0, 1, 0)) %>%
distinct(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, PRED_LEN, Pred_common, Prey_Name, pres_absent) %>% #This big chunk is to get rid of redundancies
pivot_wider(names_from = Prey_Name, values_from = pres_absent, values_fill = list(pres_absent = 0))
Euph_WP <- wide_data %>%
filter(Pred_common == "Walleye pollock")
Euph_WP <- na.omit(Euph_WP)
Euph_WP_M <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4) + PRED_LEN,
data = Euph_WP,
family = binomial(link = logit),
method = "GCV.Cp")
summary(Euph_WP_M)
Euph_WP_M <- Model_fun(x = Euphausiacea, dat = Euph_WP)
gam(x ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = dat,
family = binomial(link = logit),
method = "GCV.Cp")
Model_fun <- function (x, dat) {
gam(x ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = dat,
family = binomial(link = logit),
method = "GCV.Cp")
}
Euph_WP_M <- Model_fun(x = Euphausiacea, dat = Euph_WP)
Model_fun <- function (Euphausiacea, data) {
Model1 <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
Euph_WP_M <- Model_fun(Euphausiacea, Euph_WP)
summary(Euph_WP_M)
Euph_WP_M <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH) + s(GEAR_TEMP, k = 4) + PRED_LEN,
data = Euph_WP,
family = binomial(link = logit),
method = "GCV.Cp")
summary(Euph_WP_M)
Model_Euph <- function (Euphausiacea, data) {
Model1 <- gam(Euphausiacea ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
?dredge
#PRED: Pacific Halibut
Euph_PH <- wide_data %>%
filter(Pred_common == "Pacific halibut") %>%
na.omit()
Euph_PH_M <- Model_Euph(Euphausiacea, Euph_PH)
summary(Euph_PH_M)
#PRED: Pacific cod
Euph_PC <- wide_data %>%
filter(Pred_common == "Pacific cod") %>%
na.omit()
Euph_PC_M <- Model_Euph(Euphausiacea, Euph_PC)
summary(Euph_PC_M)
#PRED: Arrowtooth flounder
Euph_AF <- wide_data %>%
filter(Pred_common == "Arrowtooth ") %>%
na.omit()
Euph_AF_M <- Model_Euph(Euphausiacea, Euph_AF)
Euph_AF_M <- Model_Euph(Euphausiacea, Euph_AF)
#PRED: Arrowtooth flounder
Euph_AF <- wide_data %>%
filter(Pred_common == "Arrowtooth flounder") %>%
na.omit()
#PRED: Arrowtooth flounder
Euph_AF <- wide_data %>%
filter(Pred_common == "Arrowtooth flounder") %>%
na.omit()
Euph_AF_M <- Model_Euph(Euphausiacea, Euph_AF)
summary(Euph_AF_M)
install.packages("MuMIn")
install_version("MuMIn", "1.47.1")
library(remotes)
install_version("MuMIn", "1.47.1")
WP <- wide_data %>%
filter(Pred_common == "Walleye pollock") %>%
na.omit()
PH <- wide_data %>%
filter(Pred_common == "Pacific halibut") %>%
na.omit()
PC <- wide_data %>%
filter(Pred_common == "Pacific cod") %>%
na.omit()
#PRED: Walleye Pollock
Euph_WP_M <- Model_Euph(Euphausiacea, WP)
WP <- wide_data %>%
filter(Pred_common == "Walleye pollock") %>%
na.omit()
PH <- wide_data %>%
filter(Pred_common == "Pacific halibut") %>%
na.omit()
PC <- wide_data %>%
filter(Pred_common == "Pacific cod") %>%
na.omit()
Euph_AF <- wide_data %>%
filter(Pred_common == "Arrowtooth flounder") %>%
na.omit()
WP <- wide_data %>%
filter(Pred_common == "Walleye pollock") %>%
na.omit()
PH <- wide_data %>%
filter(Pred_common == "Pacific halibut") %>%
na.omit()
PC <- wide_data %>%
filter(Pred_common == "Pacific cod") %>%
na.omit()
AF <- wide_data %>%
filter(Pred_common == "Arrowtooth flounder") %>%
na.omit()
#--------------------------------
#PREY: Walleye Pollock
#Pred: Walley
#Euphausiid Function
Model_WP <- function ('Walleye pollock', data) {
Model1 <- gam('Walleye pollock' ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#--------------------------------
#PREY: Walleye Pollock
#Pred: Walley
#Euphausiid Function
Model_WP <- function (x, data) {
Model1 <- gam(x ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#PRED: Walleye Pollock
Euph_WP_M <- Model_Euph('Walleye pollock', WP)
summary(Euph_WP_M)
#PRED: Pacific cod
Euph_PC_M <- Model_WP('Euphausiacea', PC)
Model1 <- gam('Walleye pollock' ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
#--------------------------------
#PREY: Walleye Pollock
#Pred: Walley
#Euphausiid Function
Model_WP <- function (x, data) {
Model1 <- gam('Walleye pollock' ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#PRED: Walleye Pollock
WP_WP_M <- Model_WP('Walleye pollock', WP)
#--------------------------------
#PREY: Walleye Pollock
#Pred: Walley
#Euphausiid Function
Model_WP <- function (x, data) {
Model1 <- gam(Walleye pollock ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#--------------------------------
#PREY: Sand Lance
Model_SL <- function (Ammodytidae, data) {
Model1 <- gam(Ammodytidae ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#PRED: Walleye Pollock
SL_WP_M <- Model_WP(Ammodytidae, WP)
#PRED: Walleye Pollock
SL_WP_M <- Model_SL(Ammodytidae, WP)
summary(SL_WP_M)
#PRED: Pacific Halibut
SL_PH_M <- Model_SL(Ammodytidae, PH)
summary(Euph_PH_M)
#PRED: Pacific cod
SL_PC_M <- Model_SL(Ammodytidae, PC)
summary(Euph_PC_M)
summary(SL_PH_M)
summary(SL_PC_M)
summary(SL_AF_M)
#PRED: Arrowtooth flounder
SL_AF_M <- Model_SL(Ammodytidae, AF)
summary(SL_AF_M)
#I think I need to do a bit of data manipulation to get my data to look more like cheryls which is in a wide format
#I believe that her data is formatted so each line is a predator and the prey items are listed as columns within the pred stomach
#I need to create a unique identifier for each predator
wide_data <- data %>%
mutate(uniqueID = paste(HAULJOIN, PRED_NODC, PRED_SPECN), sep = "", #create unique pred id
pres_absent = ifelse(PREY_TWT > 0, 1, 0)) %>%
distinct(uniqueID, Year, Month, Day, Haul_Join, RLAT, RLONG, GEAR_DEPTH, BOTTOM_DEPTH, START_HOUR,
SURFACE_TEMP, GEAR_TEMP, INPFC_AREA, START_DATE, PRED_LEN, Pred_common, Prey_Name, pres_absent) %>% #This big chunk is to get rid of redundancies
pivot_wider(names_from = Prey_Name, values_from = pres_absent, values_fill = list(pres_absent = 0)) %>%
rename(Walleyepollock = 'Walleye pollock')
#-------------------------------
#PREY: Walleye Pollock
Model_SL <- function (Walleyepollock, data) {
Model1 <- gam(Walleyepollock ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#-------------------------------
#PREY: Walleye Pollock
Model_WP <- function (Walleyepollock, data) {
Model1 <- gam(Walleyepollock ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#PRED: Walleye Pollock
WP_WP_M <- Model_WP(Walleyepollock, WP)
WP <- wide_data %>%
filter(Pred_common == "Walleye pollock") %>%
na.omit()
PH <- wide_data %>%
filter(Pred_common == "Pacific halibut") %>%
na.omit()
PC <- wide_data %>%
filter(Pred_common == "Pacific cod") %>%
na.omit()
AF <- wide_data %>%
filter(Pred_common == "Arrowtooth flounder") %>%
na.omit()
#-------------------------------
#PREY: Walleye Pollock
Model_WP <- function (Walleyepollock, data) {
Model1 <- gam(Walleyepollock ~ Year + s(RLONG, RLAT) + s(GEAR_DEPTH)+ s(GEAR_TEMP, k = 4) + PRED_LEN,
data = data,
family = binomial(link = logit),
method = "GCV.Cp")
return(Model1)
}
#PRED: Walleye Pollock
WP_WP_M <- Model_WP(Walleyepollock, WP)
summary(WP_WP_M)
#PRED: Pacific Halibut
WP_PH_M <- Model_WP(Walleyepollock, PH)
summary(WP_PH_M)
#PRED: Pacific cod
WP_PC_M <- Model_WP(Walleyepollock, PC)
summary(WP_PC_M)
#PRED: Arrowtooth flounder
WP_AF_M <- Model_WP(Walleyepollock, AF)
summary(WP_AF_M)
install.packages("MuMIn")

?range
??range
range2003 <- sT2003 <- stomach %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
range(Pred_len)
df = rbind(sE2003, sF2003, sT2003)
df_list <- list(sE2003, sF2003, sT2003)
dflist %>% reduce(full_join, by = 'Pred_name')
df_list <- list(sE2003, sF2003, sT2003)
df_list %>% reduce(full_join, by = 'Pred_name')
df_list %>% reduce(st_join, by = 'Pred_name')
#2003
stomach <- stomach %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
summarise(E = n())
sT2003 <- stomach %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = n(Pred_stomwt = 0),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- stomach %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = n(Pred_stomwt = 0),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- stomach %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- stomach %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
#I want to convert it into a spatial dataframe
stomach <- st_as_sf(raw_stomach_contents, coords = c("Rlong", "Rlat"), crs = 3467)
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = n(Pred_stomwt = 0),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = n_distinct(Pred_stomwt = 0),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = n_distinct(Pred_stomwt = 0),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
?n_distinct
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = length(unique(Pred_stomwt = 0)),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
#2003
1 <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
mutate(E = n())
#2003
1 <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
mutate(E = n())
sF2003 <- stomach %>%
filter(Year == 2003, Pred_stomwt != 0) %>%
group_by(Pred_name) %>%
summarise(E = n(Pred_stomwt))
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = length(unique(Pred_stomwt = 0)),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = n_distinct(Pred_stomwt),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
F = length(Pred_stomwt = 0),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
?length
#I want to convert it into a spatial dataframe
stomach <- st_as_sf(raw_stomach_contents, coords = c("Rlong", "Rlat"), crs = 3467)
sF2003 <- stomach %>%
filter(Year == 2003, Pred_stomwt != 0) %>%
group_by(Pred_name) %>%
summarise(E = n(Pred_stomwt))
sF2003 <- stomach %>%
filter(Year == 2003, Pred_stomwt != 0) %>%
group_by(Pred_name) %>%
summarise(E = n())
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len)) %>%
filter(Pred_stomwt != 0) %>%
summarise(F = n(Pred_stomwt))
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len)) %>%
filter(Pred_stomwt != 0) %>%
summarise(F = n())
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
mutate(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len)) %>%
filter(Pred_stomwt != 0) %>%
summarise(F = n())
sT2003 <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
mutate(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len)) %>%
filter(Pred_stomwt != 0) %>%
mutate(F = n())
sT2003 <- raw_stomach_contents %>%
select(Year, Pred_name, Pred_len, Pred_stomwt) %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
mutate(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len)) %>%
filter(Pred_stomwt != 0) %>%
mutate(F = n())
sT2003 <- raw_stomach_contents %>%
select(Year, Pred_name, Pred_len, Pred_stomwt) %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
mutate(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len)) %>%
filter(Pred_stomwt != 0) %>%
group_by(Pred_name) %>%
mutate(F = n())
sT2003 <- raw_stomach_contents %>%
select(Year, Pred_name, Pred_len, Pred_stomwt) %>%
filter(Year == 2003) %>%
group_by(Pred_name, mutate(E = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))) %>%
filter(Pred_stomwt != 0) %>%
group_by(Pred_name) %>%
mutate(F = n())
#2003
1 <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
mutate(E = n())
#2003
1 <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
summarise(E = n())
#2003
1 <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
summarise(E = n())
1 <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
summarise(E = n())
#2003
raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
summarise(E = n())
#2003
raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
select(Year, Pred_name, Pred_len, Pred_stomwt) %>%
group_by(Pred_name) %>%
mutate(E = n())
#2003
raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
select(Pred_name, Pred_len, Pred_stomwt) %>%
group_by(Pred_name) %>%
mutate(E = n())
#2003
raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
select(Pred_name, Pred_len, Pred_stomwt) %>%
group_by(Pred_name) %>%
summarise(E = n())
#2003
1 <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
select(Pred_name, Pred_len, Pred_stomwt) %>%
group_by(Pred_name) %>%
summarise(E = n())
#2003
E <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
select(Pred_name, Pred_len, Pred_stomwt) %>%
group_by(Pred_name) %>%
summarise(E = n())
F <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt != 0) %>%
select(Pred_name, Pred_len, Pred_stomwt) %>%
group_by(Pred_name) %>%
summarise(F = n())
#2003
E <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt == 0) %>%
group_by(Pred_name) %>%
summarise(E = n())
View(E)
F <- raw_stomach_contents %>%
select(Pred_name, Pred_len, Pred_stomwt) %>%
group_by(Pred_name) %>%
summarise(F = n())
F <- raw_stomach_contents %>%
filter(Year == 2003, Pred_stomwt != 0) %>%
group_by(Pred_name) %>%
summarise(F = n())
T <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(T = n(),
"Fork length (cm)* Mean" = median(Pred_len),
"+- SD" = sd(Pred_len))
df2003 <- full_join(E, F, T, by = "Pred_name")
View(df2003)
df_list <- list(E, F, T)
df2003 <- merge(E, F, T, by = "Pred_name")
df2003 <- merge(df_list, by = "Pred_name")
df2003 <- full_join(E, F, by = "Pred_name") %>% full_join(T, by = Pred_name)
df2003 <- full_join(E, F, by = Pred_name) %>% full_join(T, by = Pred_name)
df2003 <- cbind(E, F, T)
?cbind
#-------------------QC Checks ------------------
#check that Pred_Full matches the Pred_stomwt
stomach %>%
filter(Pred_full == 1) %>%
ggplot(aes(x = Pred_stomwt, y = Pred_len)) +
geom_point()
stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Pred_full, y = Pred_len)) +
geom_point()
stomach %>%
ggplot(aes(x = Pred_stomwt, y = Pred_full)) +
geom_point()
stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Pred_full, y = Pred_len)) +
geom_point() +
labs(title = "filtered for Pred_stomwt = 0")
stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Pred_full)) +
geom_histogram() +
labs(title = "filtered for Pred_stomwt = 0")
, y = Pred_len
stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Pred_full, y = Pred_len)) +
geom_point() +
labs(title = "filtered for Pred_stomwt = 0")
#CHECK THIS, seems like an error? if the stomach weight is 0 the pred full values should all be 1
stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Prey_twt, y = Pred_len)) +
geom_point() +
labs(title = "filtered for Pred_stomwt = 0")
QC1 <- stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Pred_full, y = Pred_len)) +
geom_point() +
labs(title = "filtered for Pred_stomwt = 0")
ggsave(plot = QC1, path = "output", "QC1.jpg", device = "jpg")
#CHECK THIS, seems like an error? if the stomach weight is 0 the pred full values should all be 1
QC2 <- stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Prey_twt, y = Pred_len)) +
geom_point() +
labs(title = "filtered for Pred_stomwt = 0")
ggsave(plot = QC2, path = "output", "QC1.jpg", device = "jpg")
ggsave(plot = QC1, path = "output", "QC1.jpg", device = "jpg")
ggsave(plot = QC2, path = "output", "QC2.jpg", device = "jpg")
#HMMM this also seems wrong for the same reasons?
QC3 <- stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Pred_dig, y = Pred_len)) +
geom_point()
ggsave(plot = QC3, path = "output", "QC3.jpg", device = "jpg")
#HMMM this also seems wrong for the same reasons?
QC3 <- stomach %>%
filter(Pred_stomwt == 0) %>%
ggplot(aes(x = Pred_dig, y = Pred_len)) +
geom_point()+
labs(title = "filtered for Pred_stomwt = 0")
ggsave(plot = QC3, path = "output", "QC3.jpg", device = "jpg")
stomach %>%
ggplot(aes(x = Pred_dig, y = Pred_twt)) +
geom_point()
stomach %>%
ggplot(aes(x = Pred_dig, y = Pred_twt)) +
geom_point()
stomach %>%
ggplot(aes(x = Pred_dig, y = Prey_twt)) +
geom_point()
EF <- full_join(E, F, by = "Pred_name")
EFT <- full_join(EF, T, by = "Pred_name")
View(EFT)
#Calculate mean of empty stomachs by species
T <- raw_stomach_contents %>%
filter(Year == 2003) %>%
group_by(Pred_name) %>%
summarise(T = n(),
"Fork length (cm)* Mean" = mean(Pred_len),
"+- SD" = sd(Pred_len))
EFT <- full_join(EF, T, by = "Pred_name")
View(EFT)
#looking into swapping scientific names for common names
sci2comm(sci='Helianthus annuus')
?sci2comm
install.packages("sci2comm")
#looking into swapping scientific names for common names
library(sci2comm)
install.packages("taxize")
#looking into swapping scientific names for common names
library(taxize)
uids <- get_uid(T$Pred_name)
uids
uids.found <- as.uid(uids[!is.na(uids)])
# keep only species names  corresponding to your ids
species.found <- T[!is.na(uids)]
common.names <- sci2comm(uids.found, db = 'ncbi')
uids.found <- as.uid(uids[!is.na(uids)])
uids.found <- get_uid(T$Pred_name)
# keep only species names  corresponding to your ids
species.found <- T[!is.na(uids)]
# keep only species names  corresponding to your ids
species.found <- T[!is.na(uids.found)]
common.names <- sci2comm(uids.found, db = 'ncbi')
taxize::use_entrez()
taxize::use_entrez()
Poll <- raw_stomach_contents %>%
filter(Year == 2003, Pred_name == "Theragra chalcogramma")
View(EFT)
Poll <- raw_stomach_contents %>%
filter(Year == 2003, Pred_name == "Gadus chalcogrammus")
View(Poll)
Weight <- Poll %>%
group_by(Prey_Name) %>%
summarise(TotalWt = sum(Prey_twt))
View(Weight)
#calculate total prey weight
sum(Weight$TotalWt)
#calculate percent weight in new column
Weight1 <- Weight %>%
mutate(PW = (TotalWt/4756.197)*100)
View(Weight1)
#calculate percent weight in new column
Weight <- Weight %>%
mutate(PW = (TotalWt/4756.197)*100)
View(Weight)
#input datasets
data.raw <- read_csv(here("data", "DietTutorialRaw.csv"))
data.clean <- read_csv(here("data", "DietTutorialClean.csv"))
loc <- read_csv(here("data", "LocationTutorial.csv"))
#join datasets
data <-left_join(data.raw, loc)
#converting variables to correct type
data$LingID <- as.integer(data$LingID)
data$PreyOccur <- as.integer(data$PreyOccur)
#sub out the errors
data$PreyTaxa <- gsub("Teleostei unid", "Teleostei NEI", data$PreyTaxa)
data$PreyTaxa <- gsub("Zoarcoidei", "Suborder Zoarcoidei", data$PreyTaxa)
#Fixing: there is a lingcod that has a length of 3cm which I think is an error. I'm going to change it from 3.3 to 33
data$LingLength_cm[data$LingLength_cm == 3.3] <- 33
#Fixing: I found a couple of lingcod that have no weight measurements. I'm going to replace 0 with NA values.
data$LingWt_g[data$LingWt_g == 0] <- NA
#Fixing: I'm replacing the 1 value with a 0
data %>%
filter(LingID ==1530) %>%
mutate(PreyOccur = recode(PreyOccur, '1' = 0)) ->
data3
data %>%
filter(LingID ==1139) %>%
mutate(PreyOccur = recode(PreyOccur, '1' = 0)) ->
data2
#Fixing: I'm changing the prey code from 2 to 1
data %>%
filter(LingID ==578) %>%
mutate(PreyCode = recode(PreyCode, '2' = 1)) ->
data1
data %>%
mutate(PreyCode = ifelse(LingID == 578, 1, PreyCode))->
DataNew
df %>%
df %>%
mutate(Weight=ifelse(Fruits=="Pineapple",NA,Weight))
df %>%
mutate(Weight=ifelse(Fruits=="Pineapple",NA,Weight))
final.data <-left_join(data.clean, loc)
#--------------- PART 3: Data Prep ----------------------
#filtering down for analysis
final.data %>%
filter(PreyCode > 3) %>%
filter(!PreyTaxa == "Teleostei NEI")->
final.data.2
###Percent by Weight %W
#(sum weight of prey type i) / (total weight of all prey) x 100
#First find the sum weight of each prey type
Weight <-
as.data.frame(summarise(
group_by(final.data, PreyTaxa),
TotalWt = sum(PreyWt_g)))
#last calculate percent weight in new column
Weight$PW <- (Weight$TotalWt/10396.51)*100
###Percent by number %N
#(sum of number of individuals of prey type i) / (total number of all prey) * 100
#We know from the instructions that there were 1764 prey items sampled
#First find the sum of number of individuals of each prey type
Number <-
as.data.frame(summarise(
group_by(final.data, PreyTaxa),
N = sum(PreyNum)
))
View(final.data)
#percent frequency
Number <- Poll %>%
filter(Pred_stomwt != 0) %>%
group_by(Prey_Name) %>%
summarise(N = n())
View(Number)
sum(Number$N)
Number <- Number %>%
mutate(PF = (N/1254)*100)
View(Number)
PollSum <- full_join(Number, Weight, by = c(Prey_Name = PreyTaxa))
PollSum <- full_join(Number, Weight, by = c("PreyTaxa" = Prey_Name))
PollSum <- full_join(Number, Weight, by = c("PreyTaxa" = "Prey_Name"))
PollSum <- full_join(Number, Weight, by = c("PreyTaxa" == "Prey_Name"))
PollSum <- full_join(Number, Weight, by = c("PreyTaxa" = "Prey_Name"))
#Percent Weight
#calculate weight of each prey group
Weight <- Poll %>%
group_by(Prey_Name) %>%
summarise(TotalWt = sum(Prey_twt))
PollSum <- full_join(Number, Weight, by = "Prey_Name")
View(PollSum)
#calculate percent weight in new column
Weight <- Weight %>%
mutate(PW = (TotalWt/4756.197)*100)
PollSum <- full_join(Number, Weight, by = "Prey_Name")
PollSum <- full_join(Number, Weight, by = "Prey_Name") %>%
select(Prey_Name, PF, PW)
#' date: '`r format(Sys.Date(), "%B %d, %Y")`'
#' output:
#'    html_document:
#'       number_sections: true
#'       toc: true
#'       toc_float:
#'          collapsed: true
#' ---
#'
#+ include=F
library(here) #setup
#This is my first look at the food habits data
#edit
#load some libraries
library(readr)
library(tidyverse)
library(sf)
library(here)

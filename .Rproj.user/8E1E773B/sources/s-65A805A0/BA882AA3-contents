---
title: "WDFW_ScoreWeight"
output: html_document
author: "Catalina Burch"
date: "4/18/2022"
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# Prepare environment ----
rm(list = ls())

#load libraries
library(tidyverse)
library(here)
library(RColorBrewer)

```

##This Document investigates the functional form of the WDFW equation
There is more information within the Draft_WDFWScoreWeight.R document, but I chose to only pull out the code that was useful or interesting.

This first chunk of code looks at the different curves for each species of salmonid. Within the Case Area many species have both an ESA and non ESA listed runs, which will score differently because of the D variable. The M variable is fixed for each species depending on if they are Anadromous or Resident. The P value is also fixed for each species based on the production potential. The H variable is our dependent plotted on the x axis. The B and C variables are constant across all species in order to isolate the impact of the other variables on the PI score. 

```{r, include=FALSE}

#Create dummy dataframes for each species and each run type
#I got the data for the ESA listing from salmonscape

CoastChinook<- data.frame(B=1, P=0.016, H=1:5000, Species = "Chinook Salmon", ESA = "Not listed",Run = "WA Coast", M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))
PugetChinook <- data.frame(B=1, P=0.016, H=1:5000, Species = "Chinook Salmon", ESA = "Listed", Run = "Puget Sound", M=2, D=3, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

OPCoho<- data.frame(B=1, P=0.05, H=1:5000, Species = "Coho Salmon", ESA = "Not listed", Run = "Olympic Peninsula/SW WA", M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))
PugetCoho <- data.frame(B=1, P=0.05, H=1:5000, Species = "Coho Salmon", ESA = "Species of concern", Run = "Puget Sound", M=2, D=2, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

PlesantSockeye <- data.frame(B=1, P=3, H=1:5000, Species = "Sockeye Salmon", ESA = "Listed", Run = "Lake Plesant",  M=2, D=3, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))
QuinaltSockeye <- data.frame(B=1, P=3, H=1:5000, Species = "Sockeye Salmon", ESA = "Not listed", Run = "Quinalt/Baker River",  M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

Bull_Dolly <- data.frame(B=1, P=0.0007, H=1:5000, Species = "Bull Trout/Dolly Varden", ESA = "Not listed", Run = "NA", M=1, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

Rainbow <- data.frame(B=1, P=0.04, H=1:5000, Species = "Rainbow Trout", ESA = "Not listed", Run = "NA", M=1, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

HoodChum <- data.frame(B=1, P=1.25, H=1:5000, Species = "Chum Salmon", ESA = "Listed", Run = "Hood River", M=2, D=3, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))
CoastChum <- data.frame(B=1, P=1.25, H=1:5000, Species = "Chum Salmon", ESA = "Not listed", Run = "Pacific Coast/Puget Sound", M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

OddPink <- data.frame(B=1, P=1.25, H=1:5000, Species = "Pink Salmon", ESA = "Not listed", Run = "Odd/Even", M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

OPSteelhead <- data.frame(B=1, P=0.0021, H=1:5000, Species = "Steelhead", ESA = "Not listed", Run = "Olympic Penninsula", M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))
PugetSteelhead <- data.frame(B=1, P=0.0021, H=1:5000, Species = "Steelhead", ESA = "Listed", Run = "Puget/SW WA", M=2, D=3, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

Cutthroat <- data.frame(B=1, P=0.037, H=1:5000, Species = "Cutthroat Trout", ESA = "Not listed", Run = "NA", M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

#Join all the dataframes so that they can be plotted together
SpeciesJoin = rbind(Cutthroat, PugetSteelhead, OPSteelhead, OddPink,
                    CoastChum, HoodChum, Rainbow, Bull_Dolly, QuinaltSockeye, PlesantSockeye,
                    PugetCoho, OPCoho, CoastChinook, PugetChinook)

```

##Species Plot

```{r, include=FALSE}

SpeciesJoin %>% 
  mutate(Species = fct_reorder(Species, desc(P))) %>% 
  ggplot(aes(x=H, y=PI, color=ESA))+
  geom_line(size=.8)+
  scale_color_manual(values=c("navyblue", "lightskyblue", "turquoise4"))+
  facet_wrap(~Species)+
  theme_classic()+
  theme(strip.background=element_blank())+
  scale_x_continuous(expand = c(0,0),
                     breaks = c(1000, 3000, 5000))+
  scale_y_continuous(expand= c(0,0))+
  labs(x = "Habitat Quanity (m)", y = "PI Score")->
  SpeciesPlot
SpeciesPlot

#Save Plot
ggsave(here("output/WDFW Figures","SpeciesLine"), plot = SpeciesPlot, device = "pdf")
#I edited this plot using illustrator to make it more "beautiful" the final plot is in the BeautifulRClassFigures.pdf
```

##Cost Scenario
Next I looked at modeling different cost scenarios to see how cost impacts the overall PI score. 
Summary statistics used in this plot were calculated in the wdfw_explore_ra.rmd file
```{r, include=FALSE}
#Let's try looking at one species under different cost scenarios to see how much habitat,
  #would have to be gained to make the cost worth it. I modeled this scenario as if it were a sockeye run, but it doesn't really matter what the other variables values are as long as they are held constant.
#100,000m is equal to ~62miles
#I'm using M=2 because Sockeye is anadromous
#I'm using D=1 because there was only one threatened run on Salmon scape but most of the 
  #case area apears not to be ESA listed
#creating dummy models
HighCost <- data.frame(B=1, P=3, H=1:5000, Scenario = "LowCost", M=2, D=1, C=3) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))
MedCost <- data.frame(B=1, P=3, H=1:5000, Scenario = "MedCost", M=2, D=1, C=2) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))
LowCost <- data.frame(B=1, P=3, H=1:5000, Scenario = "HighCost", M=2, D=1, C=1) %>% 
  mutate(PI = (B*P*H*M*D*C)^(1/4))

#merging the datasets
Cost = rbind(HighCost, MedCost, LowCost)

#plotting results
  #I chose the horizontal PI value based on the average PI for the WDFW dataset (this was calculated in the     WDFW explore doc)
  #The intersections were calculated by hand using the WDFW equation

ggplot(data = Cost, aes(x = H, y = PI, color = Scenario))+
  geom_line()+
  theme_minimal()+
  geom_hline(yintercept = 13)+
  geom_vline(xintercept = c(1586, 2380, 4760), linetype = "dashed")+
  geom_segment(aes(x = 0, y = 0, xend = 4760, yend = 0), color = "red")+
  annotate(geom = "text", x = 4600, y = 1, label = "1", color = "red")+
  geom_segment(aes(x = 0, y = 1, xend = 2380, yend = 1), color = "blue")+
  annotate(geom = "text", x = 2200, y = 2, label = "1/2", color = "blue")+
  geom_segment(aes(x = 0, y = 2, xend = 1586, yend = 2), color = "green")+
  annotate(geom = "text", x = 1400, y = 3, label = "1/3", color = "green")+
  scale_y_continuous(breaks = c(3, 9, 13, 17))+
  scale_x_continuous(breaks = c(1586, 2380, 4760))+
  labs(x = "Upstream lineal habitat gain m^2", y = "WDFW PI Score")+
  scale_color_manual(breaks = c("LowCost", "MedCost", "HighCost"), 
                     values = c("red", "blue","green")) ->
WDFWCost

WDFWCost

#save figure
ggsave(here("output/WDFW Figures","WDFWCost"), plot = WDFWCost, device = "png", width = 6, height = 5)

```
We found that there is a constant ratio of 1/3 : 1/2 : 1 due to the cost variable having three posible values of (1,2,3). So the low cost scenario produces the same PI score as the high cost scenario at 1/3 the Habitat, and the medium cost scenario produces the same PI score as the high cost scenario at 1/2 the Habitat. Another way to phrase it is that the high cost needs 3x the habitat gain or 2x the habitat gain to compete with the lower cost scenarios. To me this says that cost has a large influence on the overall score. 

Species condition (D) behaves similarly because it also has only three possible values of (1, 2, 3). Therefore D and Cost (C) are equally weighted because they have the same potential values.

Passability also behaves similarly because it's potential values are (0.33, 0.67, 1) which if you multiply by 3 you get (1, 2, 3). However it is not weighted equally when you compare to other variables because the potential values are 3x less. I think this means that Passability has 1/3 the score weight compared to D and C.


```{r, include=FALSE}

```

